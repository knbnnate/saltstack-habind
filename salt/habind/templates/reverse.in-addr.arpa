$ORIGIN {{ reverse_zone }}.in-addr.arpa.
@       IN      SOA     @       hostmaster.ha. (
					{{ None|strftime("%Y%m%d%H") }}	; serial
					30M	; refresh
					1H	; retry
					2H	; expire
					30 )	; minimum
{% set nameservers = salt['pillar.get']('habind:nameservers',[]) -%}
{% set dcs = salt['pillar.get']('habind:dcs',[]) -%}
{% for nameserver in nameservers -%}
{% for dc in dcs -%}
@        IN      NS      {{ nameserver }}.{{ dc }}.ha.
{% endfor -%}
{% endfor -%}
{% for record, octets in salt['pillar.get']('habind:back_octets',{}).items() -%}
{# e.g. [('foo','83.10'),('bar','83.11')] -#}
{% set record_octets_str = octets|string -%}{# e.g. '83.10' -#}
{% set forward_ip = salt['ipv4_manip.add'](forward_octets,record_octets_str) -%}
{% set reverse = salt['ipv4_manip.reverse'](forward_ip) -%}
{{ reverse }}.in-addr-arpa.	IN	PTR	{{ record }}.{{ forward_zone }}.
{% endif -%}
{% endfor -%}
{% for roundrobin, octetslist in salt['pillar.get']('habind:roundrobins',{}).items() -%}
{% for octets in octetslist -%}
{% set roundrobin_octets_str = octets|string -%}
{% set roundrobin_forward_ip = salt['ipv4_manip.add'](forward_octets,roundrobin_octets_str) -%}
{% set roundrobin_reverse = salt['ipv4_manip.reverse'](roundrobin_forward_ip) -%}
{{ roundrobin_reverse }}.in-addr.arpa.        IN     PTR       {{ roundrobin }}.{{ forward_zone }}.
{% endif -%}
{% endfor -%}
{% endfor -%}

