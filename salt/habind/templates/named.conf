options {
  listen-on port 53 { any; };
  listen-on-v6 port 53 { any; };
  directory       "/var/named";
  dump-file       "/var/named/data/cache_dump.db";
  statistics-file "/var/named/data/named_stats.txt";
  memstatistics-file "/var/named/data/named_mem_stats.txt";
  allow-query     { any; };
  allow-transfer  { any; };
  recursion yes;
  dnssec-enable yes;
  dnssec-validation yes;
  dnssec-lookaside auto;
  /* Path to ISC DLV key */
  bindkeys-file "/etc/named.iscdlv.key";
  managed-keys-directory "/var/named/dynamic";
  forwarders { {% for fwd in salt['pillar.get']('habind:forwarders',['8.8.8.8','8.8.4.4']) -%} {{ fwd }}; {% endfor -%} };
};
logging {
    channel default_debug {
        file "data/named.run";
        severity dynamic;
    };
};
{% for dc in salt['pillar.get']('habind:dcs',['alpha']) -%}
{% set acl = salt['pillar.get']('habind:map:{0}:acl'.format(dc),'192.168.0.0/16') -%}
{% set cnames = salt['pillar.get']('habind:cnames','cnames') -%}
acl network-{{ dc }} {
  {{ acl }};
};
view "ha-{{ dc }}view" {
  match-clients { network-{{ dc }}; };
  zone "{{ cnames }}.ha" IN {
    type master;
    file "{{ cnames }}.ha-{{ dc }}view";
    allow-transfer { any; };
  };
  zone "." IN {
    type hint;
    file "named.ca";
  };
  zone "ha" IN {
    type master;
    file "ha.zone";
  };
{% for dc1 in salt['pillar.get']('habind:dcs',['alpha']) -%}
  zone "{{ dc1 }}.ha" IN {
    type master;
    file "{{ dc1 }}.ha.zone";
    allow-transfer { any; };
  };
{% set reverse_octets = salt['pillar.get']('habind:map:{0}:reverse_octets'.format(dc1),'168.192') -%}
  zone "{{ reverse_octets }}.in-addr.arpa" IN {
    type master;
    file "{{ reverse_octets }}.in-addr.arpa";
    allow-transfer { any; };
  };
{% endfor -%}
};
{% endfor -%}

include "/etc/named.root.key";
